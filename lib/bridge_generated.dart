// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.49.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'bridge_generated.io.dart'
    if (dart.library.html) 'bridge_generated.web.dart';
import 'package:meta/meta.dart';

class Id3TagsImpl implements Id3Tags {
  final Id3TagsPlatform _platform;
  factory Id3TagsImpl(ExternalLibrary dylib) =>
      Id3TagsImpl.raw(Id3TagsPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory Id3TagsImpl.wasm(FutureOr<WasmModule> module) =>
      Id3TagsImpl(module as ExternalLibrary);
  Id3TagsImpl.raw(this._platform);
  Future<Tag> read({required String path, dynamic hint}) =>
      _platform.executeNormal(FlutterRustBridgeTask(
        callFfi: (port_) =>
            _platform.inner.wire_read(port_, _platform.api2wire_String(path)),
        parseSuccessData: _wire2api_tag,
        constMeta: kReadConstMeta,
        argValues: [path],
        hint: hint,
      ));

  FlutterRustBridgeTaskConstMeta get kReadConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "read",
        argNames: ["path"],
      );

  Future<void> write({required String path, required Tag data, dynamic hint}) =>
      _platform.executeNormal(FlutterRustBridgeTask(
        callFfi: (port_) => _platform.inner.wire_write(
            port_,
            _platform.api2wire_String(path),
            _platform.api2wire_box_autoadd_tag(data)),
        parseSuccessData: _wire2api_unit,
        constMeta: kWriteConstMeta,
        argValues: [path, data],
        hint: hint,
      ));

  FlutterRustBridgeTaskConstMeta get kWriteConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "write",
        argNames: ["path", "data"],
      );

// Section: wire2api

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  int _wire2api_box_autoadd_i32(dynamic raw) {
    return raw as int;
  }

  int _wire2api_box_autoadd_u32(dynamic raw) {
    return raw as int;
  }

  int _wire2api_i32(dynamic raw) {
    return raw as int;
  }

  String? _wire2api_opt_String(dynamic raw) {
    return raw == null ? null : _wire2api_String(raw);
  }

  int? _wire2api_opt_box_autoadd_i32(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_i32(raw);
  }

  int? _wire2api_opt_box_autoadd_u32(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_u32(raw);
  }

  Uint8List? _wire2api_opt_uint_8_list(dynamic raw) {
    return raw == null ? null : _wire2api_uint_8_list(raw);
  }

  Tag _wire2api_tag(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 7)
      throw Exception('unexpected arr length: expect 7 but see ${arr.length}');
    return Tag(
      title: _wire2api_opt_String(arr[0]),
      artist: _wire2api_opt_String(arr[1]),
      album: _wire2api_opt_String(arr[2]),
      year: _wire2api_opt_box_autoadd_i32(arr[3]),
      genre: _wire2api_opt_String(arr[4]),
      duration: _wire2api_opt_box_autoadd_u32(arr[5]),
      picture: _wire2api_opt_uint_8_list(arr[6]),
    );
  }

  int _wire2api_u32(dynamic raw) {
    return raw as int;
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }

  void _wire2api_unit(dynamic raw) {
    return;
  }
}

// Section: api2wire

@protected
int api2wire_i32(int raw) {
  return raw;
}

@protected
int api2wire_u32(int raw) {
  return raw;
}

@protected
int api2wire_u8(int raw) {
  return raw;
}
